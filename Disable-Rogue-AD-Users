<#SCRIPT TO QUERY AD USERS EMPLOYEE NUMBER; DISABLES ROGUE ACCOUNTS; EMAILS RESULTS
  Create a scedule task for this hourly is best
  
  This script to be coupled with CreatenewADuser-Function.ps1
  #>
    #secure E-mail password
      $secure=read-host -assecurestring
      $ecrypt=converfrom-securestring -securestring $secure
      $encrypt | set-content encrypt.txt
      
      #Edit below
          $csv=(import-csv .\usersDB.csv).employeenumber
          $Email_Login=""
          $password=get-content encrypt.txt | converto-securestring
          $credential=new-object System.Management.Automation.PSCredential -argumentlist $Email_Login,Password
          $from=""
          $deliverto=""
          $smtpserver=""
          $searchbase="DC=domain,DC=local"

    #Do no edit below
          $users=Get-ADUser -SearchBase $searchbase  -filter * -Properties employeenumber,samaccountname,name | ?{$_.employeenumber -notin $csv -and $_.enabled -eq $true}
          foreach ($user in $users) {
          $name=$user.name
          $sam=$user.samaccountname
          Disable-ADAccount $sam
          Send-MailMessage -From $from -to $deliverTo -Subject "$name was found to be a rogue account creation" -body "$name was disabled" -credential $credential -SmtpServer $SMTPserver -usessl -Port 587
          }
